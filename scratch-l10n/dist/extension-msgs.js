// GENERATED FILE:
export default {
  "en": {
    "gui.extension.music.name": "Music",
    "gui.extension.music.description": "Play instruments and drums.",
    "gui.extension.pen.name": "Pen",
    "gui.extension.pen.description": "Draw with your sprites.",
    "gui.extension.HTTPIO.name": "HTTPIO",
    "gui.extension.HTTPIO.description": "Feel the charm of the Internet!",
    "gui.extension.ccjson.name": "JSON",
    "gui.extension.ccjson.description": "Useful JSON extension.",
    "gui.extension.redlist.name": "Libra",
    "gui.extension.redlist.description": "Libra Redlist Plugin",
    "gui.extension.videosensing.name": "Video Sensing",
    "gui.extension.videosensing.description": "Sense motion with the camera.",
    "gui.extension.text2speech.name": "Text to Speech",
    "gui.extension.text2speech.description": "Make your projects talk.",
    "gui.extension.translate.name": "Translate",
    "gui.extension.translate.description": "Translate text into many languages.",
    "gui.extension.makeymakey.description": "Make anything into a key.",
    "gui.extension.microbit.description": "Connect your projects with the world.",
    "gui.extension.microbit.connectingMessage": "Connecting",
    "gui.extension.ev3.description": "Build interactive robots and more.",
    "gui.extension.ev3.connectingMessage": "Connecting. Make sure the pin on your EV3 is set to 1234.",
    "gui.extension.boost.description": "Bring robotic creations to life.",
    "gui.extension.boost.connectingMessage": "Connecting",
    "gui.extension.wedo2.description": "Build with motors and sensors.",
    "gui.extension.wedo2.connectingMessage": "Connecting",
    "gui.extension.gdxfor.description": "Sense push, pull, motion, and spin.",
    "gui.extension.gdxfor.connectingMessage": "Connecting",
    "boost.color.any": "any color",
    "boost.color.black": "black",
    "boost.color.blue": "blue",
    "boost.color.green": "green",
    "boost.color.red": "red",
    "boost.color.white": "white",
    "boost.color.yellow": "yellow",
    "boost.getMotorPosition": "motor [MOTOR_REPORTER_ID] position",
    "boost.getTiltAngle": "tilt angle [TILT_DIRECTION]",
    "boost.motorDirection.backward": "that way",
    "boost.motorDirection.forward": "this way",
    "boost.motorDirection.reverse": "reverse",
    "boost.motorOff": "turn motor [MOTOR_ID] off",
    "boost.motorOn": "turn motor [MOTOR_ID] on",
    "boost.motorOnFor": "turn motor [MOTOR_ID] for [DURATION] seconds",
    "boost.motorOnForRotation": "turn motor [MOTOR_ID] for [ROTATION] rotations",
    "boost.seeingColor": "seeing [COLOR] brick?",
    "boost.setLightHue": "set light color to [HUE]",
    "boost.setMotorDirection": "set motor [MOTOR_ID] direction [MOTOR_DIRECTION]",
    "boost.setMotorPower": "set motor [MOTOR_ID] speed to [POWER] %",
    "boost.tiltDirection.any": "any",
    "boost.tiltDirection.down": "down",
    "boost.tiltDirection.left": "left",
    "boost.tiltDirection.right": "right",
    "boost.tiltDirection.up": "up",
    "boost.whenColor": "when [COLOR] brick seen",
    "boost.whenTilted": "when tilted [TILT_DIRECTION_ANY]",
    "ccjson.getValueByKey": "get [KEY] in [JSON]",
    "ccjson.setValueByKey": "set [KEY] to [VALUE] in [JSON]",
    "ev3.beepNote": "beep note [NOTE] for [TIME] secs",
    "ev3.buttonPressed": "button [PORT] pressed?",
    "ev3.getBrightness": "brightness",
    "ev3.getDistance": "distance",
    "ev3.getMotorPosition": "motor [PORT] position",
    "ev3.motorSetPower": "motor [PORT] set power [POWER] %",
    "ev3.motorTurnClockwise": "motor [PORT] turn this way for [TIME] seconds",
    "ev3.motorTurnCounterClockwise": "motor [PORT] turn that way for [TIME] seconds",
    "ev3.whenBrightnessLessThan": "when brightness < [DISTANCE]",
    "ev3.whenButtonPressed": "when button [PORT] pressed",
    "ev3.whenDistanceLessThan": "when distance < [DISTANCE]",
    "gdxfor.getAcceleration": "acceleration [DIRECTION]",
    "gdxfor.getForce": "force",
    "gdxfor.getSpin": "spin speed [DIRECTION]",
    "gdxfor.getTilt": "tilt angle [TILT]",
    "gdxfor.isFreeFalling": "falling?",
    "gdxfor.isTilted": "tilted [TILT]?",
    "gdxfor.pulled": "pulled",
    "gdxfor.pushed": "pushed",
    "gdxfor.shaken": "shaken",
    "gdxfor.startedFalling": "started falling",
    "gdxfor.tiltDirectionMenu.any": "any",
    "gdxfor.tiltDirectionMenu.back": "back",
    "gdxfor.tiltDirectionMenu.front": "front",
    "gdxfor.tiltDirectionMenu.left": "left",
    "gdxfor.tiltDirectionMenu.right": "right",
    "gdxfor.turnedFaceDown": "turned face down",
    "gdxfor.turnedFaceUp": "turned face up",
    "gdxfor.whenForcePushedOrPulled": "when force sensor [PUSH_PULL]",
    "gdxfor.whenGesture": "when [GESTURE]",
    "gdxfor.whenTilted": "when tilted [TILT]",
    "httpio.categoryName": "HttpIO",
    "httpio.httpGet": "get [URL]",
    "httpio.httpPost": "post [URL] with JSON [JSON]",
    "httpio.setHeader": "set header to [HEADER]",
    "httpio.setUA": "set UA to [UA]",
    "libra.categoryName": "Libra",
    "libra.inListReason": "reason of [NAME] being in redlist",
    "libra.isInList": "is [NAME] in the redlist?",
    "libra.isRedlistAvailable": "is redlist available?",
    "makeymakey.downArrow": "down arrow",
    "makeymakey.downArrowShort": "down",
    "makeymakey.leftArrow": "left arrow",
    "makeymakey.leftArrowShort": "left",
    "makeymakey.rightArrow": "right arrow",
    "makeymakey.rightArrowShort": "right",
    "makeymakey.spaceKey": "space",
    "makeymakey.upArrow": "up arrow",
    "makeymakey.upArrowShort": "up",
    "makeymakey.whenKeyPressed": "when [KEY] key pressed",
    "makeymakey.whenKeysPressedInOrder": "when [SEQUENCE] pressed in order",
    "microbit.buttonsMenu.any": "any",
    "microbit.clearDisplay": "clear display",
    "microbit.defaultTextToDisplay": "Hello!",
    "microbit.displaySymbol": "display [MATRIX]",
    "microbit.displayText": "display text [TEXT]",
    "microbit.gesturesMenu.jumped": "jumped",
    "microbit.gesturesMenu.moved": "moved",
    "microbit.gesturesMenu.shaken": "shaken",
    "microbit.isButtonPressed": "[BTN] button pressed?",
    "microbit.isTilted": "tilted [DIRECTION]?",
    "microbit.pinStateMenu.off": "off",
    "microbit.pinStateMenu.on": "on",
    "microbit.tiltAngle": "tilt angle [DIRECTION]",
    "microbit.tiltDirectionMenu.any": "any",
    "microbit.tiltDirectionMenu.back": "back",
    "microbit.tiltDirectionMenu.front": "front",
    "microbit.tiltDirectionMenu.left": "left",
    "microbit.tiltDirectionMenu.right": "right",
    "microbit.whenButtonPressed": "when [BTN] button pressed",
    "microbit.whenGesture": "when [GESTURE]",
    "microbit.whenPinConnected": "when pin [PIN] connected",
    "microbit.whenTilted": "when tilted [DIRECTION]",
    "music.categoryName": "Music",
    "music.changeTempo": "change tempo by [TEMPO]",
    "music.drumBass": "(2) Bass Drum",
    "music.drumBongo": "(13) Bongo",
    "music.drumCabasa": "(15) Cabasa",
    "music.drumClaves": "(9) Claves",
    "music.drumClosedHiHat": "(6) Closed Hi-Hat",
    "music.drumConga": "(14) Conga",
    "music.drumCowbell": "(11) Cowbell",
    "music.drumCrashCymbal": "(4) Crash Cymbal",
    "music.drumCuica": "(18) Cuica",
    "music.drumGuiro": "(16) Guiro",
    "music.drumHandClap": "(8) Hand Clap",
    "music.drumOpenHiHat": "(5) Open Hi-Hat",
    "music.drumSideStick": "(3) Side Stick",
    "music.drumSnare": "(1) Snare Drum",
    "music.drumTambourine": "(7) Tambourine",
    "music.drumTriangle": "(12) Triangle",
    "music.drumVibraslap": "(17) Vibraslap",
    "music.drumWoodBlock": "(10) Wood Block",
    "music.getTempo": "tempo",
    "music.instrumentBass": "(6) Bass",
    "music.instrumentBassoon": "(14) Bassoon",
    "music.instrumentCello": "(8) Cello",
    "music.instrumentChoir": "(15) Choir",
    "music.instrumentClarinet": "(10) Clarinet",
    "music.instrumentElectricGuitar": "(5) Electric Guitar",
    "music.instrumentElectricPiano": "(2) Electric Piano",
    "music.instrumentFlute": "(12) Flute",
    "music.instrumentGuitar": "(4) Guitar",
    "music.instrumentMarimba": "(19) Marimba",
    "music.instrumentMusicBox": "(17) Music Box",
    "music.instrumentOrgan": "(3) Organ",
    "music.instrumentPiano": "(1) Piano",
    "music.instrumentPizzicato": "(7) Pizzicato",
    "music.instrumentSaxophone": "(11) Saxophone",
    "music.instrumentSteelDrum": "(18) Steel Drum",
    "music.instrumentSynthLead": "(20) Synth Lead",
    "music.instrumentSynthPad": "(21) Synth Pad",
    "music.instrumentTrombone": "(9) Trombone",
    "music.instrumentVibraphone": "(16) Vibraphone",
    "music.instrumentWoodenFlute": "(13) Wooden Flute",
    "music.midiPlayDrumForBeats": "play drum [DRUM] for [BEATS] beats",
    "music.midiSetInstrument": "set instrument to [INSTRUMENT]",
    "music.playDrumForBeats": "play drum [DRUM] for [BEATS] beats",
    "music.playNoteForBeats": "play note [NOTE] for [BEATS] beats",
    "music.restForBeats": "rest for [BEATS] beats",
    "music.setInstrument": "set instrument to [INSTRUMENT]",
    "music.setTempo": "set tempo to [TEMPO]",
    "pen.categoryName": "Pen",
    "pen.changeColorParam": "change pen [COLOR_PARAM] by [VALUE]",
    "pen.changeHue": "change pen color by [HUE]",
    "pen.changeShade": "change pen shade by [SHADE]",
    "pen.changeSize": "change pen size by [SIZE]",
    "pen.clear": "erase all",
    "pen.colorMenu.brightness": "brightness",
    "pen.colorMenu.color": "color",
    "pen.colorMenu.saturation": "saturation",
    "pen.colorMenu.transparency": "transparency",
    "pen.penDown": "pen down",
    "pen.penUp": "pen up",
    "pen.setColor": "set pen color to [COLOR]",
    "pen.setColorParam": "set pen [COLOR_PARAM] to [VALUE]",
    "pen.setHue": "set pen color to [HUE]",
    "pen.setShade": "set pen shade to [SHADE]",
    "pen.setSize": "set pen size to [SIZE]",
    "pen.stamp": "stamp",
    "speech.defaultWhenIHearValue": "let''s go",
    "speech.extensionName": "Speech to Text",
    "speech.listenAndWait": "listen and wait",
    "speech.speechReporter": "speech",
    "speech.whenIHear": "when I hear [PHRASE]",
    "text2speech.alto": "alto",
    "text2speech.categoryName": "Text to Speech",
    "text2speech.defaultTextToSpeak": "hello",
    "text2speech.giant": "giant",
    "text2speech.kitten": "kitten",
    "text2speech.setLanguageBlock": "set language to [LANGUAGE]",
    "text2speech.setVoiceBlock": "set voice to [VOICE]",
    "text2speech.speakAndWaitBlock": "speak [WORDS]",
    "text2speech.squeak": "squeak",
    "text2speech.tenor": "tenor",
    "translate.categoryName": "Translate",
    "translate.defaultTextToTranslate": "hello",
    "translate.translateBlock": "translate [WORDS] to [LANGUAGE]",
    "translate.viewerLanguage": "language",
    "videoSensing.categoryName": "Video Sensing",
    "videoSensing.direction": "direction",
    "videoSensing.motion": "motion",
    "videoSensing.off": "off",
    "videoSensing.on": "on",
    "videoSensing.onFlipped": "on flipped",
    "videoSensing.setVideoTransparency": "set video transparency to [TRANSPARENCY]",
    "videoSensing.sprite": "sprite",
    "videoSensing.stage": "stage",
    "videoSensing.videoOn": "video [ATTRIBUTE] on [SUBJECT]",
    "videoSensing.videoToggle": "turn video [VIDEO_STATE]",
    "videoSensing.whenMotionGreaterThan": "when video motion > [REFERENCE]",
    "wedo2.getDistance": "distance",
    "wedo2.getTiltAngle": "tilt angle [TILT_DIRECTION]",
    "wedo2.isTilted": "tilted [TILT_DIRECTION_ANY]?",
    "wedo2.motorDirection.backward": "that way",
    "wedo2.motorDirection.forward": "this way",
    "wedo2.motorDirection.reverse": "reverse",
    "wedo2.motorId.a": "motor A",
    "wedo2.motorId.all": "all motors",
    "wedo2.motorId.b": "motor B",
    "wedo2.motorId.default": "motor",
    "wedo2.motorOff": "turn [MOTOR_ID] off",
    "wedo2.motorOn": "turn [MOTOR_ID] on",
    "wedo2.motorOnFor": "turn [MOTOR_ID] on for [DURATION] seconds",
    "wedo2.playNoteFor": "play note [NOTE] for [DURATION] seconds",
    "wedo2.setLightHue": "set light color to [HUE]",
    "wedo2.setMotorDirection": "set [MOTOR_ID] direction to [MOTOR_DIRECTION]",
    "wedo2.startMotorPower": "set [MOTOR_ID] power to [POWER]",
    "wedo2.tiltDirection.any": "any",
    "wedo2.tiltDirection.down": "down",
    "wedo2.tiltDirection.left": "left",
    "wedo2.tiltDirection.right": "right",
    "wedo2.tiltDirection.up": "up",
    "wedo2.whenDistance": "when distance [OP] [REFERENCE]",
    "wedo2.whenTilted": "when tilted [TILT_DIRECTION_ANY]",
    "ccjson.getValueByArray": "get value ([POS] of [ARRAY])",
    "clipblocks.booleanMenu.false": "false",
    "clipblocks.booleanMenu.true": "true",
    "clipblocks.clearFlashGraphicEffect": "clear all flash effect",
    "clipblocks.colorInPosition": "color of x:[X] y:[Y]",
    "clipblocks.createvar": "create a variable [NAME]",
    "clipblocks.deletevar": "delete a variable [NAME]",
    "clipblocks.getClipboard": "content of clipboard",
    "clipblocks.gotoWebsite": "go to website: [URL]",
    "clipblocks.graphicMenu.bevel": "bevel",
    "clipblocks.graphicMenu.blur": "blur",
    "clipblocks.graphicMenu.glow": "glow",
    "clipblocks.graphicMenu.shadow": "shadow",
    "clipblocks.isVariableExist": "is [NAME] exist?",
    "clipblocks.playSoundFromInternet": "play sound from URL: [URL]",
    "clipblocks.setClipboard": "set the content of clipboard to [TEXT]",
    "clipblocks.setFlashGraphicEffect": "set [FLASHEFFECT] flash effect to [VALUE1] [VALUE2] [VALUE3]",
    "clipblocks.setRate": "set rate to [RATE]",
    "clipblocks.setStageSize": "set stage size to [WIDTH] x [HEIGHT]",
    "clipblocks.setVisibility": "set the visibility of all sprite to [BOOLEANMENU]",
    "clipblocks.showDialog": "show dialog title:[TITLE] content: [CONTENT] left-layout: [BOOLEANMENU] buttontext:[BUTTONTEXT] ",
    "clipblocks.stopSoundFromInternet": "stop sound from URL",
    "clipblocks.valueOfVariable": "value of [NAME]",
    "pen.booleanMenu.false": "false",
    "pen.booleanMenu.true": "true",
    "pen.drawRect": "use [COLOR] to draw a square on x:[X] y:[Y] width:[WIDTH] height:[HEIGHT]",
    "pen.printText": "print [TEXT] on x:[X] y:[Y]",
    "pen.setPrintFont": "set print font to [FONT]",
    "pen.setPrintFontBold": "set print font bold to [BOOLEANMENU]",
    "pen.setPrintFontColor": "set print font color to [COLOR]",
    "pen.setPrintFontItalic": "set print font italic to [BOOLEANMENU]",
    "pen.setPrintFontSize": "set print font size to [SIZE]",
    "pen.setPrintFontUnderline": "set print font underline to [BOOLEANMENU]",
    "gui.extension.clipcc.json.name": "JSON",
    "gui.extension.clipcc.json.description": "Useful JSON extension.",
    "ccjson.getLengthOfArray": "get length of [ARRAY]",
    "ccjson.setValueByPos": "set [POS] in array [ARRAY] to [VALUE]",
    "pen.GoPenLayer": "go to [OPTION] layer",
    "pen.layerMenu.back": "back",
    "pen.layerMenu.front": "front"
  },
  "fr": {
    "gui.extension.music.name": "Musique",
    "gui.extension.music.description": "Jouer des instruments et du tambour.",
    "gui.extension.pen.name": "Stylo",
    "gui.extension.pen.description": "Dessiner avec vos sprites.",
    "gui.extension.HTTPIO.name": "HTTPIO",
    "gui.extension.HTTPIO.description": "Ressentez le charme de l'Internet !",
    "gui.extension.ccjson.name": "JSON",
    "gui.extension.ccjson.description": "Extension JSON utile.",
    "gui.extension.redlist.name": "Libra",
    "gui.extension.redlist.description": "Plugin de liste rouge Libra",
    "gui.extension.videosensing.name": "Détection vidéo",
    "gui.extension.videosensing.description": "Capter du mouvement avec la caméra.",
    "gui.extension.text2speech.name": "Synthèse vocale",
    "gui.extension.text2speech.description": "Fais parler tes projets.",
    "gui.extension.translate.name": "Traduire",
    "gui.extension.translate.description": "Traduire du texte dans différentes langues.",
    "gui.extension.makeymakey.description": "Transforme n'importe quoi en touche.",
    "gui.extension.microbit.description": "Connecter vos projets avec le monde.",
    "gui.extension.microbit.connectingMessage": "Connexion",
    "gui.extension.ev3.description": "Construire des robots interactifs et plus.",
    "gui.extension.ev3.connectingMessage": "Connexion. Vérifiez que le pin sur votre EV3 est mis sur 1234.",
    "gui.extension.boost.description": "Donner vie à des créations robotiques.",
    "gui.extension.boost.connectingMessage": "Connexion",
    "gui.extension.wedo2.description": "Construire avec des moteurs et des capteurs.",
    "gui.extension.wedo2.connectingMessage": "Connexion",
    "gui.extension.gdxfor.description": "Sentir quand on pousse, tire, bouge et tourne.",
    "gui.extension.gdxfor.connectingMessage": "Connexion",
    "boost.color.any": "de n'importe quelle couleur",
    "boost.color.black": "noire",
    "boost.color.blue": "bleue",
    "boost.color.green": "verte",
    "boost.color.red": "rouge",
    "boost.color.white": "blanche",
    "boost.color.yellow": "jaune",
    "boost.getMotorPosition": "position du moteur [MOTOR_REPORTER_ID]",
    "boost.getTiltAngle": "angle d'inclinaison [TILT_DIRECTION]",
    "boost.motorDirection.backward": "par là",
    "boost.motorDirection.forward": "par ici",
    "boost.motorDirection.reverse": "inversée",
    "boost.motorOff": "éteindre le moteur [MOTOR_ID]",
    "boost.motorOn": "allumer le moteur [MOTOR_ID]",
    "boost.motorOnFor": "faire tourner le moteur [MOTOR_ID] pendant [DURATION] secondes",
    "boost.motorOnForRotation": "faire tourner le moteur [MOTOR_ID] de [ROTATION] rotations",
    "boost.seeingColor": "brique [COLOR] vue ?",
    "boost.setLightHue": "mettre la couleur de la lampe à [HUE]",
    "boost.setMotorDirection": "mettre la direction du moteur [MOTOR_ID] à [MOTOR_DIRECTION]",
    "boost.setMotorPower": "mettre la vitesse du moteur [MOTOR_ID] à [POWER] %",
    "boost.tiltDirection.any": "n'importe laquelle",
    "boost.tiltDirection.down": "vers le bas",
    "boost.tiltDirection.left": "à gauche",
    "boost.tiltDirection.right": "à droite",
    "boost.tiltDirection.up": "vers le haut",
    "boost.whenColor": "quand une brique [COLOR] est vue",
    "boost.whenTilted": "quand incliné [TILT_DIRECTION_ANY]",
    "ccjson.getValueByKey": "obtenir [KEY] in [JSON]",
    "ccjson.setValueByKey": "mettre [KEY] à [VALEUR] dans [JSON]",
    "ev3.beepNote": "jouer la note [NOTE] pendant [TIME] secondes",
    "ev3.buttonPressed": "bouton [PORT] appuyé ?",
    "ev3.getBrightness": "luminosité",
    "ev3.getDistance": "distance",
    "ev3.getMotorPosition": "position du moteur [PORT]",
    "ev3.motorSetPower": "mettre la puissance du moteur [PORT] à [POWER] %",
    "ev3.motorTurnClockwise": "faire tourner le moteur [PORT] dans ce sens-ci pendant [TIME] secondes",
    "ev3.motorTurnCounterClockwise": "faire tourner le moteur [PORT] dans ce sens-là pendant [TIME] secondes",
    "ev3.whenBrightnessLessThan": "quand la luminosité < [DISTANCE]",
    "ev3.whenButtonPressed": "quand le bouton [PORT] est appuyé",
    "ev3.whenDistanceLessThan": "quand la distance < [DISTANCE]",
    "gdxfor.getAcceleration": "accélération [DIRECTION]",
    "gdxfor.getForce": "force",
    "gdxfor.getSpin": "vitesse de rotation [DIRECTION]",
    "gdxfor.getTilt": "angle d'inclinaison [TILT]",
    "gdxfor.isFreeFalling": "tombe ?",
    "gdxfor.isTilted": "incliné [TILT] ?",
    "gdxfor.pulled": "tiré",
    "gdxfor.pushed": "poussé",
    "gdxfor.shaken": "secoué",
    "gdxfor.startedFalling": "commençant à tomber",
    "gdxfor.tiltDirectionMenu.any": "n'importe laquelle",
    "gdxfor.tiltDirectionMenu.back": "en arrière",
    "gdxfor.tiltDirectionMenu.front": "en avant",
    "gdxfor.tiltDirectionMenu.left": "à gauche",
    "gdxfor.tiltDirectionMenu.right": "à droite",
    "gdxfor.turnedFaceDown": "tourné vers le bas",
    "gdxfor.turnedFaceUp": "tourné vers le haut",
    "gdxfor.whenForcePushedOrPulled": "quand le capteur de force est [PUSH_PULL]",
    "gdxfor.whenGesture": "quand [GESTURE]",
    "gdxfor.whenTilted": "quand incliné [TILT]",
    "httpio.categoryName": "HttpIO",
    "httpio.httpGet": "obtenir [URL]",
    "httpio.httpPost": "poster [URL] avec le JSON [JSON]",
    "httpio.setHeader": "mettre l'en-tête à [HEADER]",
    "httpio.setUA": "mettre l'UA à [UA]",
    "libra.categoryName": "Libra",
    "libra.inListReason": "raison de [NAME] pour être dans la liste rouge",
    "libra.isInList": "[NAME] est-il dans la liste rouge ?",
    "libra.isRedlistAvailable": "La liste rouge est-elle disponible ?",
    "makeymakey.downArrow": "flèche bas",
    "makeymakey.downArrowShort": "bas",
    "makeymakey.leftArrow": "flèche gauche",
    "makeymakey.leftArrowShort": "gauche",
    "makeymakey.rightArrow": "flèche droite",
    "makeymakey.rightArrowShort": "droite",
    "makeymakey.spaceKey": "espace",
    "makeymakey.upArrow": "flèche haut",
    "makeymakey.upArrowShort": "haut",
    "makeymakey.whenKeyPressed": "quand la touche [KEY] pressée",
    "makeymakey.whenKeysPressedInOrder": "quand [SEQUENCE] sont pressés dans l'ordre",
    "microbit.buttonsMenu.any": "n'importe lequel",
    "microbit.clearDisplay": "effacer l'écran",
    "microbit.defaultTextToDisplay": "Bonjour !",
    "microbit.displaySymbol": "afficher [MATRIX]",
    "microbit.displayText": "afficher le texte [TEXT]",
    "microbit.gesturesMenu.jumped": "sauté",
    "microbit.gesturesMenu.moved": "bougé",
    "microbit.gesturesMenu.shaken": "secoué",
    "microbit.isButtonPressed": "bouton [BTN] appuyé ?",
    "microbit.isTilted": "incliné [DIRECTION] ?",
    "microbit.pinStateMenu.off": "désactivée",
    "microbit.pinStateMenu.on": "activée",
    "microbit.tiltAngle": "angle d'inclinaison [DIRECTION]",
    "microbit.tiltDirectionMenu.any": "dans n'importe quelle direction",
    "microbit.tiltDirectionMenu.back": "en arrière",
    "microbit.tiltDirectionMenu.front": "en avant",
    "microbit.tiltDirectionMenu.left": "à gauche",
    "microbit.tiltDirectionMenu.right": "à droite",
    "microbit.whenButtonPressed": "quand le bouton [BTN] est appuyé",
    "microbit.whenGesture": "quand [GESTURE]",
    "microbit.whenPinConnected": "quand la broche [PIN] est connectée",
    "microbit.whenTilted": "quand incliné [DIRECTION]",
    "music.categoryName": "Musique",
    "music.changeTempo": "ajouter [TEMPO] au tempo",
    "music.drumBass": "(2) Grosse caisse",
    "music.drumBongo": "(13) Bongo",
    "music.drumCabasa": "(15) Cabasa",
    "music.drumClaves": "(9) Claves",
    "music.drumClosedHiHat": "(6) Charleston fermé",
    "music.drumConga": "(14) Conga",
    "music.drumCowbell": "(11) Sonnaille",
    "music.drumCrashCymbal": "(4) Cymbale crash",
    "music.drumCuica": "(18) Cuíca",
    "music.drumGuiro": "(16) Guiro",
    "music.drumHandClap": "(8) Claquement de main",
    "music.drumOpenHiHat": "(5) Charleston ouvert",
    "music.drumSideStick": "(3) Side Stick",
    "music.drumSnare": "(1) Caisse claire",
    "music.drumTambourine": "(7) Tambourin",
    "music.drumTriangle": "(12) Triangle",
    "music.drumVibraslap": "(17) Vibraslap",
    "music.drumWoodBlock": "(10) Wood-block",
    "music.getTempo": "tempo",
    "music.instrumentBass": "(6) Basse",
    "music.instrumentBassoon": "(14) Basson",
    "music.instrumentCello": "(8) Violoncelle",
    "music.instrumentChoir": "(15) Chorale",
    "music.instrumentClarinet": "(10) Clarinette",
    "music.instrumentElectricGuitar": "(5) Guitare électrique",
    "music.instrumentElectricPiano": "(2) Piano électrique",
    "music.instrumentFlute": "(12) Flûte",
    "music.instrumentGuitar": "(4) Guitare",
    "music.instrumentMarimba": "(19) Marimba",
    "music.instrumentMusicBox": "(17) Boîte à musique",
    "music.instrumentOrgan": "(3) Orgue",
    "music.instrumentPiano": "(1) Piano",
    "music.instrumentPizzicato": "(7) Pizzicato",
    "music.instrumentSaxophone": "(11) Saxophone",
    "music.instrumentSteelDrum": "(18) Steel Drum",
    "music.instrumentSynthLead": "(20) Lead synthétisé",
    "music.instrumentSynthPad": "(21) Pad synthétisé",
    "music.instrumentTrombone": "(9) Trombone",
    "music.instrumentVibraphone": "(16) Vibraphone",
    "music.instrumentWoodenFlute": "(13) Flûte en bois",
    "music.midiPlayDrumForBeats": "jouer du tambour [DRUM] pendant [BEATS] temps",
    "music.midiSetInstrument": "choisir l'instrument n° [INSTRUMENT]",
    "music.playDrumForBeats": "jouer du tambour [DRUM] pendant [BEATS] temps",
    "music.playNoteForBeats": "jouer la note [NOTE] pendant [BEATS] temps",
    "music.restForBeats": "faire une pause pendant [BEATS] temps",
    "music.setInstrument": "choisir l'instrument n° [INSTRUMENT]",
    "music.setTempo": "mettre le tempo à [TEMPO]",
    "pen.categoryName": "Stylo",
    "pen.changeColorParam": "ajouter [VALUE] à la [COLOR_PARAM] du stylo",
    "pen.changeHue": "ajouter [HUE] à la couleur du stylo",
    "pen.changeShade": "ajouter [SHADE] à l'intensité du stylo",
    "pen.changeSize": "ajouter [SIZE] à la taille du stylo",
    "pen.clear": "effacer tout",
    "pen.colorMenu.brightness": "luminosité",
    "pen.colorMenu.color": "couleur",
    "pen.colorMenu.saturation": "saturation",
    "pen.colorMenu.transparency": "transparence",
    "pen.penDown": "stylo en position d'écriture",
    "pen.penUp": "relever le stylo",
    "pen.setColor": "mettre la couleur du stylo à [COLOR]",
    "pen.setColorParam": "mettre la [COLOR_PARAM] du stylo à [VALUE]",
    "pen.setHue": "mettre la couleur du stylo à [HUE]",
    "pen.setShade": "mettre l'intensité du stylo à [SHADE]",
    "pen.setSize": "mettre la taille du stylo à [SIZE]",
    "pen.stamp": "estampiller",
    "speech.defaultWhenIHearValue": "allons-y",
    "speech.extensionName": "Synthèse vocale",
    "speech.listenAndWait": "écouter et attendre",
    "speech.speechReporter": "parole",
    "speech.whenIHear": "quand j'entends [PHRASE]",
    "text2speech.alto": "alto",
    "text2speech.categoryName": "Synthèse vocale",
    "text2speech.defaultTextToSpeak": "bonjour",
    "text2speech.giant": "géant",
    "text2speech.kitten": "chaton",
    "text2speech.setLanguageBlock": "mettre la langue à [LANGUAGE]",
    "text2speech.setVoiceBlock": "choisir la voix du [VOICE]",
    "text2speech.speakAndWaitBlock": "prononcer [WORDS]",
    "text2speech.squeak": "piailler",
    "text2speech.tenor": "ténor",
    "translate.categoryName": "Traduire",
    "translate.defaultTextToTranslate": "bonjour",
    "translate.translateBlock": "traduire [WORDS] en [LANGUAGE]",
    "translate.viewerLanguage": "langue",
    "videoSensing.categoryName": "Détection vidéo",
    "videoSensing.direction": "direction",
    "videoSensing.motion": "mouvement",
    "videoSensing.off": "désactiver",
    "videoSensing.on": "activer",
    "videoSensing.onFlipped": "inverser",
    "videoSensing.setVideoTransparency": "mettre la transparence de la vidéo à [TRANSPARENCY]",
    "videoSensing.sprite": "sprite",
    "videoSensing.stage": "scène",
    "videoSensing.videoOn": "[ATTRIBUTE] de la vidéo de [SUBJECT]",
    "videoSensing.videoToggle": "[VIDEO_STATE] la vidéo",
    "videoSensing.whenMotionGreaterThan": "quand le mouvement de la vidéo > [REFERENCE]",
    "wedo2.getDistance": "distance",
    "wedo2.getTiltAngle": "angle d'inclinaison [TILT_DIRECTION]",
    "wedo2.isTilted": "incliné [TILT_DIRECTION_ANY] ?",
    "wedo2.motorDirection.backward": "par là",
    "wedo2.motorDirection.forward": "par ici",
    "wedo2.motorDirection.reverse": "inversé",
    "wedo2.motorId.a": "moteur A",
    "wedo2.motorId.all": "tous les moteurs",
    "wedo2.motorId.b": "moteur B",
    "wedo2.motorId.default": "moteur",
    "wedo2.motorOff": "éteindre le moteur [MOTOR_ID]",
    "wedo2.motorOn": "allumer le moteur [MOTOR_ID]",
    "wedo2.motorOnFor": "allumer le moteur [MOTOR_ID] pendant [DURATION] secondes",
    "wedo2.playNoteFor": "jouer la note [NOTE] pendant [DURATION] secondes",
    "wedo2.setLightHue": "mettre la couleur de la lampe à [HUE]",
    "wedo2.setMotorDirection": "mettre la direction du moteur [MOTOR_ID] à [MOTOR_DIRECTION]",
    "wedo2.startMotorPower": "mettre la puissance du moteur [MOTOR_ID] à [POWER]",
    "wedo2.tiltDirection.any": "dans n'importe quelle direction",
    "wedo2.tiltDirection.down": "vers le bas",
    "wedo2.tiltDirection.left": "à gauche",
    "wedo2.tiltDirection.right": "à droite",
    "wedo2.tiltDirection.up": "vers le haut",
    "wedo2.whenDistance": "quand la distance [OP] [REFERENCE]",
    "wedo2.whenTilted": "quand incliné [TILT_DIRECTION_ANY]",
    "ccjson.getValueByArray": "obtenir la valeur ([POS] de [ARRAY])",
    "clipblocks.booleanMenu.false": "faux",
    "clipblocks.booleanMenu.true": "vrai",
    "clipblocks.clearFlashGraphicEffect": "clear all flash effect",
    "clipblocks.colorInPosition": "couleur à x : [X] y : [Y]",
    "clipblocks.createvar": "créer une variable [NAME]",
    "clipblocks.deletevar": "supprimer une variable [NAME]",
    "clipblocks.getClipboard": "contenu du presse-papiers",
    "clipblocks.gotoWebsite": "visiter le site web : [URL]",
    "clipblocks.graphicMenu.bevel": "bevel",
    "clipblocks.graphicMenu.blur": "flou",
    "clipblocks.graphicMenu.glow": "brillance",
    "clipblocks.graphicMenu.shadow": "ombre",
    "clipblocks.isVariableExist": "est-ce que [NAME] existe ?",
    "clipblocks.playSoundFromInternet": "jouer le son depuis l'URL : [URL]",
    "clipblocks.setClipboard": "mettre le contenu du presse-papiers à [TEXT]",
    "clipblocks.setFlashGraphicEffect": "set [FLASHEFFECT] flash effect to [VALUE1] [VALUE2] [VALUE3]",
    "clipblocks.setRate": "mettre l'évaluation à [RATE]",
    "clipblocks.setStageSize": "mettre la taille de la scène à [WIDTH] x [HEIGHT]",
    "clipblocks.setVisibility": "mettre la visibilité de tous les sprites à [BOOLEANMENU]",
    "clipblocks.showDialog": "afficher une boîte de dialogue : [TITLE] contenu : [CONTENT] disposition à gauche : [BOOLEANMENU] texte du bouton : [BUTTON TEXT] ",
    "clipblocks.stopSoundFromInternet": "stopper les sons des URL",
    "clipblocks.valueOfVariable": "valeur de [NAME]",
    "pen.booleanMenu.false": "faux",
    "pen.booleanMenu.true": "vrai",
    "pen.drawRect": "utiliser [COLOR] pour dessiner un carré à x : [X] y : [Y] largeur : [WIDTH] hauteur : [HEIGHT]",
    "pen.printText": "écrire [TEXT] à x : [X] y : [Y]",
    "pen.setPrintFont": "mettre la police d'écriture à [FONT]",
    "pen.setPrintFontBold": "mettre le gras de la police à [BOOLEANMENU]",
    "pen.setPrintFontColor": "mettre la couleur de la police à [COLOR]",
    "pen.setPrintFontItalic": "mettre l'italique de la police à [BOOLEANMENU]",
    "pen.setPrintFontSize": "mettre la taille de la police à [SIZE]",
    "pen.setPrintFontUnderline": "mettre le soulignement de la police à [BOOLEANMENU]",
    "gui.extension.clipcc.json.name": "JSON",
    "gui.extension.clipcc.json.description": "Extension JSON utile.",
    "ccjson.getLengthOfArray": "longueur de [ARRAY]",
    "ccjson.setValueByPos": "set [POS] in array [ARRAY] to [VALUE]",
    "pen.GoPenLayer": "aller à l'[OPTION] plan",
    "pen.layerMenu.back": "arrière",
    "pen.layerMenu.front": "avant"
  },
  "zh-cn": {
    "gui.extension.music.name": "音乐",
    "gui.extension.music.description": "演奏乐器，敲锣打鼓。",
    "gui.extension.pen.name": "画笔",
    "gui.extension.pen.description": "绘制角色。",
    "gui.extension.HTTPIO.name": "HTTP IO",
    "gui.extension.HTTPIO.description": "感受互联网的魅力！",
    "gui.extension.ccjson.name": "JSON",
    "gui.extension.ccjson.description": "有用的 JSON 扩展。",
    "gui.extension.redlist.name": "Libra 红名单",
    "gui.extension.redlist.description": "Libra 红名单",
    "gui.extension.videosensing.name": "视频侦测",
    "gui.extension.videosensing.description": "使用摄像头侦测运动。",
    "gui.extension.text2speech.name": "文字朗读",
    "gui.extension.text2speech.description": "让你的作品开口说话",
    "gui.extension.translate.name": "翻译",
    "gui.extension.translate.description": "把文字翻译成多种语言。",
    "gui.extension.makeymakey.description": "把任何东西变成按键",
    "gui.extension.microbit.description": "把作品连接到实体世界。",
    "gui.extension.microbit.connectingMessage": "正在连接",
    "gui.extension.ev3.description": "搭建交互机器人等。",
    "gui.extension.ev3.connectingMessage": "正在连接。请确保EV3上的识别码(PIN)已经设置为1234。",
    "gui.extension.boost.description": "生动有趣的机器人创作",
    "gui.extension.boost.connectingMessage": "正在连接",
    "gui.extension.wedo2.description": "支持马达和传感器。",
    "gui.extension.wedo2.connectingMessage": "正在连接",
    "gui.extension.gdxfor.description": "感受推拉动转。",
    "gui.extension.gdxfor.connectingMessage": "正在连接",
    "boost.color.any": "任何颜色",
    "boost.color.black": "黑色",
    "boost.color.blue": "蓝色",
    "boost.color.green": "绿色",
    "boost.color.red": "黄色",
    "boost.color.white": "白色",
    "boost.color.yellow": "黄色",
    "boost.getMotorPosition": "马达 [MOTOR_REPORTER_ID] 位置",
    "boost.getTiltAngle": "向[TILT_DIRECTION]倾角",
    "boost.motorDirection.backward": "逆时针",
    "boost.motorDirection.forward": "顺时针",
    "boost.motorDirection.reverse": "反转",
    "boost.motorOff": "关闭马达 [MOTOR_ID]",
    "boost.motorOn": "开启马达 [MOTOR_ID]",
    "boost.motorOnFor": "使马达 [MOTOR_ID]转动 [DURATION] 秒",
    "boost.motorOnForRotation": "使马达 [MOTOR_ID]转动 [ROTATION] 圈",
    "boost.seeingColor": "看到 [COLOR]积木 ?",
    "boost.setLightHue": "将灯光颜色设为[HUE]",
    "boost.setMotorDirection": "将马达[MOTOR_ID] 方向设为 [MOTOR_DIRECTION]",
    "boost.setMotorPower": "将马达 [MOTOR_ID] 速度设为 [POWER]%",
    "boost.tiltDirection.any": "任意方向",
    "boost.tiltDirection.down": "下",
    "boost.tiltDirection.left": "左",
    "boost.tiltDirection.right": "右",
    "boost.tiltDirection.up": "上",
    "boost.whenColor": "当看到[COLOR]积木",
    "boost.whenTilted": "当向[TILT_DIRECTION_ANY]倾斜",
    "ccjson.getValueByKey": "从 [JSON] 获取键 [KEY]",
    "ccjson.setValueByKey": "设置 [JSON] 中键 [KEY] 的值为 [VALUE]",
    "ev3.beepNote": "鸣笛[NOTE][TIME]秒",
    "ev3.buttonPressed": "按下按钮[PORT]？",
    "ev3.getBrightness": "亮度",
    "ev3.getDistance": "距离",
    "ev3.getMotorPosition": "马达[PORT]的位置",
    "ev3.motorSetPower": "马达[PORT]功率设为[POWER]%",
    "ev3.motorTurnClockwise": "马达[PORT]正转[TIME]秒",
    "ev3.motorTurnCounterClockwise": "马达[PORT]反转[TIME]秒",
    "ev3.whenBrightnessLessThan": "当亮度 < [DISTANCE]",
    "ev3.whenButtonPressed": "当按下按钮[PORT]",
    "ev3.whenDistanceLessThan": "当距离 < [DISTANCE]",
    "gdxfor.getAcceleration": "向[DIRECTION]的加速度",
    "gdxfor.getForce": "受力",
    "gdxfor.getSpin": "向[DIRECTION]的旋转速度",
    "gdxfor.getTilt": "向[TILT]倾角",
    "gdxfor.isFreeFalling": "自由落体？",
    "gdxfor.isTilted": "向[TILT]倾斜？",
    "gdxfor.pulled": "拉扯",
    "gdxfor.pushed": "挤压",
    "gdxfor.shaken": "被晃动",
    "gdxfor.startedFalling": "开始自由落体",
    "gdxfor.tiltDirectionMenu.any": "任意方向",
    "gdxfor.tiltDirectionMenu.back": "后",
    "gdxfor.tiltDirectionMenu.front": "前",
    "gdxfor.tiltDirectionMenu.left": "左",
    "gdxfor.tiltDirectionMenu.right": "右",
    "gdxfor.turnedFaceDown": "正面向下",
    "gdxfor.turnedFaceUp": "正面向上",
    "gdxfor.whenForcePushedOrPulled": "当力传感器被[PUSH_PULL]",
    "gdxfor.whenGesture": "当传感器[GESTURE]",
    "gdxfor.whenTilted": "当向[TILT]倾斜",
    "httpio.categoryName": "HTTP IO",
    "httpio.httpGet": "发送 GET 请求至 [URL]",
    "httpio.httpPost": "以 [JSON] 发送 POST 请求至 [URL]",
    "httpio.setHeader": "SET Headers [HEADER]",
    "httpio.setUA": "SET User-Agent [UA]",
    "libra.categoryName": "Libra",
    "libra.inListReason": "用户 [NAME] 在红名单的原因",
    "libra.isInList": "用户 [NAME] 在红名单？",
    "libra.isRedlistAvailable": "红名单可用",
    "makeymakey.downArrow": "↓",
    "makeymakey.downArrowShort": "下",
    "makeymakey.leftArrow": "←",
    "makeymakey.leftArrowShort": "左",
    "makeymakey.rightArrow": "→",
    "makeymakey.rightArrowShort": "右",
    "makeymakey.spaceKey": "空格",
    "makeymakey.upArrow": "↑",
    "makeymakey.upArrowShort": "上",
    "makeymakey.whenKeyPressed": "当按下 [KEY] 键",
    "makeymakey.whenKeysPressedInOrder": "当依次按下[SEQUENCE]键时",
    "microbit.buttonsMenu.any": "任意",
    "microbit.clearDisplay": "清空屏幕",
    "microbit.defaultTextToDisplay": "Hello!",
    "microbit.displaySymbol": "显示[MATRIX]",
    "microbit.displayText": "显示文本[TEXT]",
    "microbit.gesturesMenu.jumped": "抛起",
    "microbit.gesturesMenu.moved": "移动",
    "microbit.gesturesMenu.shaken": "晃动",
    "microbit.isButtonPressed": "按下[BTN]按钮？",
    "microbit.isTilted": "向[DIRECTION]倾斜？",
    "microbit.pinStateMenu.off": "低电平",
    "microbit.pinStateMenu.on": "高电平",
    "microbit.tiltAngle": "向[DIRECTION]倾角",
    "microbit.tiltDirectionMenu.any": "任意",
    "microbit.tiltDirectionMenu.back": "后",
    "microbit.tiltDirectionMenu.front": "前",
    "microbit.tiltDirectionMenu.left": "左",
    "microbit.tiltDirectionMenu.right": "右",
    "microbit.whenButtonPressed": "当按下[BTN]按钮",
    "microbit.whenGesture": "当被[GESTURE]",
    "microbit.whenPinConnected": "当引脚[PIN]接地",
    "microbit.whenTilted": "当向[DIRECTION]倾斜",
    "music.categoryName": "音乐",
    "music.changeTempo": "将演奏速度增加[TEMPO]",
    "music.drumBass": "(2) 低音鼓",
    "music.drumBongo": "(13) 邦戈鼓",
    "music.drumCabasa": "(15) 卡巴萨",
    "music.drumClaves": "(9) 音棒",
    "music.drumClosedHiHat": "(6) 闭击踩镲",
    "music.drumConga": "(14) 康加鼓",
    "music.drumCowbell": "(11) 牛铃",
    "music.drumCrashCymbal": "(4) 碎音钹",
    "music.drumCuica": "(18) 锯加鼓",
    "music.drumGuiro": "(16) 刮瓜",
    "music.drumHandClap": "(8) 手掌",
    "music.drumOpenHiHat": "(5) 开击踩镲",
    "music.drumSideStick": "(3) 敲鼓边",
    "music.drumSnare": "(1) 小军鼓",
    "music.drumTambourine": "(7) 铃鼓",
    "music.drumTriangle": "(12) 三角铁",
    "music.drumVibraslap": "(17) 颤音器",
    "music.drumWoodBlock": "(10) 木鱼",
    "music.getTempo": "演奏速度",
    "music.instrumentBass": "(6) 贝斯",
    "music.instrumentBassoon": "(14) 巴松管",
    "music.instrumentCello": "(8) 大提琴",
    "music.instrumentChoir": "(15) 唱诗班",
    "music.instrumentClarinet": "(10) 单簧管",
    "music.instrumentElectricGuitar": "(5) 电吉他",
    "music.instrumentElectricPiano": "(2) 电钢琴",
    "music.instrumentFlute": "(12) 长笛",
    "music.instrumentGuitar": "(4) 吉他",
    "music.instrumentMarimba": "(19) 马林巴琴",
    "music.instrumentMusicBox": "(17) 八音盒",
    "music.instrumentOrgan": "(3) 风琴",
    "music.instrumentPiano": "(1) 钢琴",
    "music.instrumentPizzicato": "(7) 拨弦",
    "music.instrumentSaxophone": "(11) 萨克斯管",
    "music.instrumentSteelDrum": "(18) 钢鼓",
    "music.instrumentSynthLead": "(20) 合成主音",
    "music.instrumentSynthPad": "(21) 合成柔音",
    "music.instrumentTrombone": "(9) 长号",
    "music.instrumentVibraphone": "(16) 颤音琴",
    "music.instrumentWoodenFlute": "(13) 木长笛",
    "music.midiPlayDrumForBeats": "击打 [DRUM] [BEATS] 拍",
    "music.midiSetInstrument": "将乐器设为 [INSTRUMENT]",
    "music.playDrumForBeats": "击打 [DRUM] [BEATS] 拍",
    "music.playNoteForBeats": "演奏音符[NOTE][BEATS]拍",
    "music.restForBeats": "休止[BEATS]拍",
    "music.setInstrument": "将乐器设为 [INSTRUMENT]",
    "music.setTempo": "将演奏速度设定为[TEMPO]",
    "pen.categoryName": "画笔",
    "pen.changeColorParam": "将笔的 [COLOR_PARAM] 增加[VALUE]",
    "pen.changeHue": "将笔的颜色增加[HUE]",
    "pen.changeShade": "将笔的亮度增加[SHADE]",
    "pen.changeSize": "将笔的粗细增加[SIZE]",
    "pen.clear": "全部擦除",
    "pen.colorMenu.brightness": "亮度",
    "pen.colorMenu.color": "颜色",
    "pen.colorMenu.saturation": "饱和度",
    "pen.colorMenu.transparency": "透明度",
    "pen.penDown": "落笔",
    "pen.penUp": "抬笔",
    "pen.setColor": "将笔的颜色设为[COLOR]",
    "pen.setColorParam": "将笔的 [COLOR_PARAM] 设为[VALUE]",
    "pen.setHue": "将笔的颜色设为[HUE]",
    "pen.setShade": "将笔的亮度设为[SHADE]",
    "pen.setSize": "将笔的粗细设为[SIZE]",
    "pen.stamp": "图章",
    "speech.defaultWhenIHearValue": "开始",
    "speech.extensionName": "语音识别",
    "speech.listenAndWait": "听候语音输入",
    "speech.speechReporter": "语音输入",
    "speech.whenIHear": "当听到[PHRASE]",
    "text2speech.alto": "中音",
    "text2speech.categoryName": "文字朗读",
    "text2speech.defaultTextToSpeak": "你好",
    "text2speech.giant": "巨人",
    "text2speech.kitten": "小猫",
    "text2speech.setLanguageBlock": "将朗读语言设置为[LANGUAGE]",
    "text2speech.setVoiceBlock": "使用 [VOICE] 嗓音",
    "text2speech.speakAndWaitBlock": "朗读 [WORDS]",
    "text2speech.squeak": "尖细",
    "text2speech.tenor": "男高音",
    "translate.categoryName": "翻译",
    "translate.defaultTextToTranslate": "你好",
    "translate.translateBlock": "将 [WORDS] 译为 [LANGUAGE]",
    "translate.viewerLanguage": "访客语言",
    "videoSensing.categoryName": "视频侦测",
    "videoSensing.direction": "方向",
    "videoSensing.motion": "运动",
    "videoSensing.off": "关闭",
    "videoSensing.on": "开启",
    "videoSensing.onFlipped": "镜像开启",
    "videoSensing.setVideoTransparency": "将视频透明度设为[TRANSPARENCY]",
    "videoSensing.sprite": "角色",
    "videoSensing.stage": "舞台",
    "videoSensing.videoOn": "相对于[SUBJECT]的视频[ATTRIBUTE]",
    "videoSensing.videoToggle": "[VIDEO_STATE]摄像头",
    "videoSensing.whenMotionGreaterThan": "当视频运动 > [REFERENCE]",
    "wedo2.getDistance": "距离",
    "wedo2.getTiltAngle": "向[TILT_DIRECTION]倾角",
    "wedo2.isTilted": "向[TILT_DIRECTION_ANY]倾斜？",
    "wedo2.motorDirection.backward": "逆时针",
    "wedo2.motorDirection.forward": "顺时针",
    "wedo2.motorDirection.reverse": "反转",
    "wedo2.motorId.a": "马达A",
    "wedo2.motorId.all": "所有马达",
    "wedo2.motorId.b": "马达B",
    "wedo2.motorId.default": "马达",
    "wedo2.motorOff": "关闭[MOTOR_ID]",
    "wedo2.motorOn": "开启[MOTOR_ID]",
    "wedo2.motorOnFor": "开启[MOTOR_ID][DURATION]秒",
    "wedo2.playNoteFor": "演奏音符[NOTE][DURATION]秒",
    "wedo2.setLightHue": "将灯光颜色设为[HUE]",
    "wedo2.setMotorDirection": "将[MOTOR_ID]转向设为[MOTOR_DIRECTION]",
    "wedo2.startMotorPower": "将[MOTOR_ID]功率设为[POWER]",
    "wedo2.tiltDirection.any": "任意方向",
    "wedo2.tiltDirection.down": "下",
    "wedo2.tiltDirection.left": "左",
    "wedo2.tiltDirection.right": "右",
    "wedo2.tiltDirection.up": "上",
    "wedo2.whenDistance": "当距离[OP][REFERENCE]",
    "wedo2.whenTilted": "当向[TILT_DIRECTION_ANY]倾斜",
    "ccjson.getValueByArray": "从数组 [ARRAY] 的 [POS] 位置中获取值",
    "clipblocks.booleanMenu.false": "假",
    "clipblocks.booleanMenu.true": "真",
    "clipblocks.clearFlashGraphicEffect": "清除所有原生特效",
    "clipblocks.colorInPosition": "舞台 x: [X] y: [Y] 的颜色",
    "clipblocks.createvar": "创建一个变量 [NAME]",
    "clipblocks.deletevar": "删除一个变量 [NAME]",
    "clipblocks.getClipboard": "剪贴板内容",
    "clipblocks.gotoWebsite": "跳转到网站 [URL]",
    "clipblocks.graphicMenu.bevel": "斜角",
    "clipblocks.graphicMenu.blur": "模糊",
    "clipblocks.graphicMenu.glow": "外发光",
    "clipblocks.graphicMenu.shadow": "阴影",
    "clipblocks.isVariableExist": "变量 [NAME] 存在吗？",
    "clipblocks.playSoundFromInternet": "从URL播放音乐 [URL]",
    "clipblocks.setClipboard": "将剪贴板设为 [TEXT]",
    "clipblocks.setFlashGraphicEffect": "设置原生特效 [FLASHEFFECT] 为 [VALUE1] [VALUE2] [VALUE3]",
    "clipblocks.setRate": "设置舞台帧率为 [RATE]",
    "clipblocks.setStageSize": "设置舞台大小为 [WIDTH] × [HEIGHT]",
    "clipblocks.setVisibility": "设置所有角色的可见性为 [BOOLEANMENU]",
    "clipblocks.showDialog": "显示窗口 标题: [TITLE] 内容: [CONTENT] 居左布局: [BOOLEANMENU] 按钮文本: [BUTTONTEXT]",
    "clipblocks.stopSoundFromInternet": "停止从URL播放的音乐",
    "clipblocks.valueOfVariable": "变量 [NAME] 的值",
    "pen.booleanMenu.false": "假",
    "pen.booleanMenu.true": "真",
    "pen.drawRect": "使用颜色 [COLOR] 在 x:[X] y:[Y] 处画一个宽为 [WIDTH] 高为 [HEIGHT] 的矩形",
    "pen.printText": "在 x: [X] y:[Y] 处打印文字 [TEXT]",
    "pen.setPrintFont": "设置打印字体为 [FONT]",
    "pen.setPrintFontBold": "设置打印粗体状态为 [BOOLEANMENU]",
    "pen.setPrintFontColor": "设置打印颜色为 [COLOR]",
    "pen.setPrintFontItalic": "设置打印斜体状态为 [BOOLEANMENU]",
    "pen.setPrintFontSize": "设置打印字体大小为 [SIZE]",
    "pen.setPrintFontUnderline": "设置打印下划线状态为 [BOOLEANMENU]",
    "gui.extension.clipcc.json.name": "JSON",
    "gui.extension.clipcc.json.description": "用途多多的JSON扩展。",
    "ccjson.getLengthOfArray": "获取数组 [ARRAY] 的长度",
    "ccjson.setValueByPos": "设置数组 [ARRAY] 第 [POS] 项的值为 [VALUE]",
    "pen.GoPenLayer": "将画笔图层设为 [OPTION]",
    "pen.layerMenu.back": "底层",
    "pen.layerMenu.front": "顶层"
  },
  "zh-tw": {
    "gui.extension.music.name": "音樂",
    "gui.extension.music.description": "演奏樂器與節拍。",
    "gui.extension.pen.name": "畫筆",
    "gui.extension.pen.description": "使用你的角色來畫圖。",
    "gui.extension.HTTPIO.name": "HTTP IO",
    "gui.extension.HTTPIO.description": "感受互联网的魅力！",
    "gui.extension.ccjson.name": "JSON",
    "gui.extension.ccjson.description": "有用的 JSON 擴展。",
    "gui.extension.redlist.name": "Libra",
    "gui.extension.redlist.description": "Libra 紅名單",
    "gui.extension.videosensing.name": "視訊偵測",
    "gui.extension.videosensing.description": "使用攝影機偵測動作。",
    "gui.extension.text2speech.name": "文字轉語音",
    "gui.extension.text2speech.description": "讓你的專案能夠說話",
    "gui.extension.translate.name": "翻譯",
    "gui.extension.translate.description": "將文字訊息翻譯為各國語言。",
    "gui.extension.makeymakey.description": "把任何東西變成鑰匙。",
    "gui.extension.microbit.description": "讓你的專案與實體世界連結。",
    "gui.extension.microbit.connectingMessage": "正在連線",
    "gui.extension.ev3.description": "創作互動機器人以及更多。",
    "gui.extension.ev3.connectingMessage": "正在連接，請確定 EV3 主機上的 Pin 碼已設為 1234。",
    "gui.extension.boost.description": "將機器人創造帶入現實生活。",
    "gui.extension.boost.connectingMessage": "正在連線",
    "gui.extension.wedo2.description": "運用馬達與感測器進行創作。",
    "gui.extension.wedo2.connectingMessage": "正在連線",
    "gui.extension.gdxfor.description": "Sense push, pull, motion, and spin.",
    "gui.extension.gdxfor.connectingMessage": "正在連線",
    "boost.color.any": "任何顏色",
    "boost.color.black": "黑色",
    "boost.color.blue": "藍色",
    "boost.color.green": "綠色",
    "boost.color.red": "紅色",
    "boost.color.white": "白色",
    "boost.color.yellow": "黃色",
    "boost.getMotorPosition": "[MOTOR_REPORTER_ID] 轉向角度",
    "boost.getTiltAngle": "傾斜角度 [TILT_DIRECTION]",
    "boost.motorDirection.backward": "逆時針",
    "boost.motorDirection.forward": "順時針",
    "boost.motorDirection.reverse": "相反",
    "boost.motorOff": "[MOTOR_ID] 停止",
    "boost.motorOn": "[MOTOR_ID] 啟動",
    "boost.motorOnFor": "[MOTOR_ID] 啟動 持續 [DURATION] 秒",
    "boost.motorOnForRotation": "[MOTOR_ID] 啟動 持續 [ROTATION] 圈",
    "boost.seeingColor": "看到顏色 [COLOR]？",
    "boost.setLightHue": "LED 顏色設為 [HUE]",
    "boost.setMotorDirection": "[MOTOR_ID] 方向設為 [MOTOR_DIRECTION]",
    "boost.setMotorPower": "[MOTOR_ID] 動力設為 [POWER] %",
    "boost.tiltDirection.any": "任何",
    "boost.tiltDirection.down": "向下",
    "boost.tiltDirection.left": "向左",
    "boost.tiltDirection.right": "向右",
    "boost.tiltDirection.up": "向上",
    "boost.whenColor": "當顏色 [COLOR]  被看到",
    "boost.whenTilted": "當傾斜 [TILT_DIRECTION_ANY]",
    "ccjson.getValueByKey": "獲取 [KEY] 于 [JSON] 中",
    "ccjson.setValueByKey": "設置 [KEY] 為 [VALUE] 于 [JSON] 中",
    "ev3.beepNote": "演奏音階 [NOTE] 持續 [TIME] 秒",
    "ev3.buttonPressed": "按鈕 [PORT] 被按下？",
    "ev3.getBrightness": "亮度",
    "ev3.getDistance": "距離",
    "ev3.getMotorPosition": "馬達 埠[PORT] 轉向角度",
    "ev3.motorSetPower": "馬達 埠[PORT] 動力設為 [POWER] %",
    "ev3.motorTurnClockwise": "馬達 埠[PORT] 順時針旋轉 [TIME] 秒",
    "ev3.motorTurnCounterClockwise": "馬達 埠[PORT] 逆時針旋轉 [TIME] 秒",
    "ev3.whenBrightnessLessThan": "當亮度 < [DISTANCE]",
    "ev3.whenButtonPressed": "當按鈕 [PORT] 被按下",
    "ev3.whenDistanceLessThan": "當距離 < [DISTANCE]",
    "gdxfor.getAcceleration": "加速度 [DIRECTION]",
    "gdxfor.getForce": "力量",
    "gdxfor.getSpin": "旋轉速度 [DIRECTION]",
    "gdxfor.getTilt": "傾斜角度 [TILT]",
    "gdxfor.isFreeFalling": "自由掉落？",
    "gdxfor.isTilted": "傾斜 [TILT]？",
    "gdxfor.pulled": "向外拉",
    "gdxfor.pushed": "向內推",
    "gdxfor.shaken": "晃動",
    "gdxfor.startedFalling": "開始掉落",
    "gdxfor.tiltDirectionMenu.any": "任何",
    "gdxfor.tiltDirectionMenu.back": "向下",
    "gdxfor.tiltDirectionMenu.front": "向上",
    "gdxfor.tiltDirectionMenu.left": "向左",
    "gdxfor.tiltDirectionMenu.right": "向右",
    "gdxfor.turnedFaceDown": "背面朝上",
    "gdxfor.turnedFaceUp": "正面朝上",
    "gdxfor.whenForcePushedOrPulled": "當重力感測器[PUSH_PULL]",
    "gdxfor.whenGesture": "當 [GESTURE]",
    "gdxfor.whenTilted": "當傾斜 [TILT]",
    "httpio.categoryName": "HTTP IO",
    "httpio.httpGet": "GET [URL]",
    "httpio.httpPost": "POST [URL] 使用 [PREFIX]",
    "httpio.setHeader": "設定請求頭部為 [HEADER]",
    "httpio.setUA": "設定 User-Agent 為 [UA]",
    "libra.categoryName": "Libra",
    "libra.inListReason": "用戶 [NAME] 在紅名單中的原因",
    "libra.isInList": "用戶 [NAME] 在紅名單？",
    "libra.isRedlistAvailable": "紅名單伺服器可用？",
    "makeymakey.downArrow": "向下",
    "makeymakey.downArrowShort": "向下",
    "makeymakey.leftArrow": "向左",
    "makeymakey.leftArrowShort": "向左",
    "makeymakey.rightArrow": "向右",
    "makeymakey.rightArrowShort": "向右",
    "makeymakey.spaceKey": "空白",
    "makeymakey.upArrow": "向上",
    "makeymakey.upArrowShort": "向上",
    "makeymakey.whenKeyPressed": "當 [KEY] 按鈕被按下",
    "makeymakey.whenKeysPressedInOrder": "當 [SEQUENCE] 按鈕被依序按下",
    "microbit.buttonsMenu.any": "任何",
    "microbit.clearDisplay": "清空畫面",
    "microbit.defaultTextToDisplay": "Hello!",
    "microbit.displaySymbol": "顯示圖示 [MATRIX]",
    "microbit.displayText": "顯示文字 [TEXT]",
    "microbit.gesturesMenu.jumped": "跳動",
    "microbit.gesturesMenu.moved": "移動",
    "microbit.gesturesMenu.shaken": "晃動",
    "microbit.isButtonPressed": "按鈕 [BTN] 被按下？",
    "microbit.isTilted": "傾斜 [DIRECTION]？",
    "microbit.pinStateMenu.off": "關閉",
    "microbit.pinStateMenu.on": "開啟",
    "microbit.tiltAngle": "傾斜角度 [DIRECTION]",
    "microbit.tiltDirectionMenu.any": "任何",
    "microbit.tiltDirectionMenu.back": "向下",
    "microbit.tiltDirectionMenu.front": "向上",
    "microbit.tiltDirectionMenu.left": "向左",
    "microbit.tiltDirectionMenu.right": "向右",
    "microbit.whenButtonPressed": "當按鈕 [BTN] 被按下",
    "microbit.whenGesture": "當 [GESTURE]",
    "microbit.whenPinConnected": "當引腳 [PIN] 接地",
    "microbit.whenTilted": "當傾斜 [DIRECTION]",
    "music.categoryName": "音樂",
    "music.changeTempo": "演奏速度改變 [TEMPO]",
    "music.drumBass": "(2) 低音鼓",
    "music.drumBongo": "(13) 邦加鼓",
    "music.drumCabasa": "(15) 鐵沙鈴",
    "music.drumClaves": "(9) 梆子",
    "music.drumClosedHiHat": "(6) 合起的腳踏鈸",
    "music.drumConga": "(14) 康加鼓",
    "music.drumCowbell": "(11) 牛鈴",
    "music.drumCrashCymbal": "(4) 碎音鈸",
    "music.drumCuica": "(18) 庫加鼓",
    "music.drumGuiro": "(16) 刮瓜",
    "music.drumHandClap": "(8) 拍掌",
    "music.drumOpenHiHat": "(5) 打開的腳踏鈸",
    "music.drumSideStick": "(3) 鼓邊敲擊",
    "music.drumSnare": "(1) 軍鼓",
    "music.drumTambourine": "(7) 鈴鼓",
    "music.drumTriangle": "(12) 三角鐵",
    "music.drumVibraslap": "(17) 振盪器",
    "music.drumWoodBlock": "(10) 木魚",
    "music.getTempo": "演奏速度",
    "music.instrumentBass": "(6) 貝斯",
    "music.instrumentBassoon": "(14) 低音管",
    "music.instrumentCello": "(8) 大提琴",
    "music.instrumentChoir": "(15) 人聲合唱",
    "music.instrumentClarinet": "(10) 單簧管",
    "music.instrumentElectricGuitar": "(5) 電吉他",
    "music.instrumentElectricPiano": "(2) 電子琴",
    "music.instrumentFlute": "(12) 長笛",
    "music.instrumentGuitar": "(4) 吉他",
    "music.instrumentMarimba": "(19) 馬林巴",
    "music.instrumentMusicBox": "(17) 音樂盒",
    "music.instrumentOrgan": "(3) 風琴",
    "music.instrumentPiano": "(1) 鋼琴",
    "music.instrumentPizzicato": "(7) 撥奏",
    "music.instrumentSaxophone": "(11) 薩克斯風",
    "music.instrumentSteelDrum": "(18) 鋼鼓",
    "music.instrumentSynthLead": "(20) 合成主音",
    "music.instrumentSynthPad": "(21) 合成柔音",
    "music.instrumentTrombone": "(9) 長號",
    "music.instrumentVibraphone": "(16) 顫音琴",
    "music.instrumentWoodenFlute": "(13) 木笛",
    "music.midiPlayDrumForBeats": "演奏節拍 [DRUM] [BEATS] 拍",
    "music.midiSetInstrument": "演奏樂器設為 [INSTRUMENT]",
    "music.playDrumForBeats": "演奏節拍 [DRUM] [BEATS] 拍",
    "music.playNoteForBeats": "演奏音階 [NOTE] [BEATS] 拍",
    "music.restForBeats": "演奏休息 [BEATS] 拍",
    "music.setInstrument": "演奏樂器設為 [INSTRUMENT]",
    "music.setTempo": "演奏速度設為 [TEMPO]",
    "pen.categoryName": "畫筆",
    "pen.changeColorParam": "筆跡 [COLOR_PARAM] 改變 [VALUE]",
    "pen.changeHue": "筆跡顏色改變 [HUE]",
    "pen.changeShade": "筆跡亮度改變 [SHADE]",
    "pen.changeSize": "筆跡寬度改變 [SIZE]",
    "pen.clear": "筆跡全部清除",
    "pen.colorMenu.brightness": "亮度",
    "pen.colorMenu.color": "顏色",
    "pen.colorMenu.saturation": "彩度",
    "pen.colorMenu.transparency": "透明度",
    "pen.penDown": "下筆",
    "pen.penUp": "停筆",
    "pen.setColor": "筆跡顏色設為 [COLOR]",
    "pen.setColorParam": "筆跡 [COLOR_PARAM] 設為 [VALUE]",
    "pen.setHue": "筆跡顏色設為 [HUE]",
    "pen.setShade": "筆跡亮度設為 [SHADE]",
    "pen.setSize": "筆跡寬度設為 [SIZE]",
    "pen.stamp": "蓋章",
    "speech.defaultWhenIHearValue": "開始吧",
    "speech.extensionName": "語音識別",
    "speech.listenAndWait": "收聽並等待",
    "speech.speechReporter": "語音文本",
    "speech.whenIHear": "當收到語音 [PHRASE]",
    "text2speech.alto": "alto",
    "text2speech.categoryName": "文字轉語音",
    "text2speech.defaultTextToSpeak": "hello",
    "text2speech.giant": "低沉",
    "text2speech.kitten": "小貓",
    "text2speech.setLanguageBlock": "語言設為 [LANGUAGE]",
    "text2speech.setVoiceBlock": "語音設為 [VOICE]",
    "text2speech.speakAndWaitBlock": "唸出 [WORDS]",
    "text2speech.squeak": "尖細",
    "text2speech.tenor": "tenor",
    "translate.categoryName": "翻譯",
    "translate.defaultTextToTranslate": "hello",
    "translate.translateBlock": "文字 [WORDS] 翻譯成 [LANGUAGE]",
    "translate.viewerLanguage": "瀏覽者的語言",
    "videoSensing.categoryName": "視訊偵測",
    "videoSensing.direction": "方向",
    "videoSensing.motion": "動作",
    "videoSensing.off": "關閉",
    "videoSensing.on": "開啟",
    "videoSensing.onFlipped": "翻轉",
    "videoSensing.setVideoTransparency": "視訊透明度設為 [TRANSPARENCY]",
    "videoSensing.sprite": "角色",
    "videoSensing.stage": "舞台",
    "videoSensing.videoOn": "[SUBJECT] 的視訊 [ATTRIBUTE]",
    "videoSensing.videoToggle": "視訊設為 [VIDEO_STATE]",
    "videoSensing.whenMotionGreaterThan": "當視訊動作 > [REFERENCE]",
    "wedo2.getDistance": "距離",
    "wedo2.getTiltAngle": "傾斜角度 [TILT_DIRECTION]",
    "wedo2.isTilted": "傾斜 [TILT_DIRECTION_ANY]？",
    "wedo2.motorDirection.backward": "逆時針",
    "wedo2.motorDirection.forward": "順時針",
    "wedo2.motorDirection.reverse": "相反",
    "wedo2.motorId.a": "馬達 A",
    "wedo2.motorId.all": "馬達 A 與 B",
    "wedo2.motorId.b": "馬達 B",
    "wedo2.motorId.default": "馬達",
    "wedo2.motorOff": "[MOTOR_ID] 停止",
    "wedo2.motorOn": "[MOTOR_ID] 啟動",
    "wedo2.motorOnFor": "[MOTOR_ID] 啟動 持續 [DURATION] 秒",
    "wedo2.playNoteFor": "演奏音階 [NOTE] 持續 [DURATION] 秒",
    "wedo2.setLightHue": "LED 顏色設為 [HUE]",
    "wedo2.setMotorDirection": "[MOTOR_ID] 方向設為 [MOTOR_DIRECTION]",
    "wedo2.startMotorPower": "[MOTOR_ID] 動力設為 [POWER]",
    "wedo2.tiltDirection.any": "任何",
    "wedo2.tiltDirection.down": "向下",
    "wedo2.tiltDirection.left": "向左",
    "wedo2.tiltDirection.right": "向右",
    "wedo2.tiltDirection.up": "向上",
    "wedo2.whenDistance": "當距離 [OP] [REFERENCE]",
    "wedo2.whenTilted": "當傾斜 [TILT_DIRECTION_ANY]",
    "ccjson.getValueByArray": "從數組 [ARRAY] 的 [POS] 位置中獲取值",
    "clipblocks.booleanMenu.false": "假",
    "clipblocks.booleanMenu.true": "真",
    "clipblocks.clearFlashGraphicEffect": "清除所有原生特效 ",
    "clipblocks.colorInPosition": "舞台 x: [X] y: [Y] 的顏色",
    "clipblocks.createvar": "創建一個變量 [NAME]",
    "clipblocks.deletevar": "刪除一個變量 [NAME]",
    "clipblocks.getClipboard": "剪貼板內容",
    "clipblocks.gotoWebsite": "訪問網站 [URL]",
    "clipblocks.graphicMenu.bevel": "斜面 ",
    "clipblocks.graphicMenu.blur": "模糊",
    "clipblocks.graphicMenu.glow": "發光",
    "clipblocks.graphicMenu.shadow": "陰影",
    "clipblocks.isVariableExist": "變量 [NAME] 存在嗎？",
    "clipblocks.playSoundFromInternet": "從URL播放音樂 [URL]",
    "clipblocks.setClipboard": "將剪貼板設為 [TEXT]",
    "clipblocks.setFlashGraphicEffect": "設置原生特效 [FLASHEFFECT] 為 [VALUE1] [VALUE2] [VALUE3]",
    "clipblocks.setRate": "設置舞台幀率為 [RATE]",
    "clipblocks.setStageSize": "設置舞台大小為 [WIDTH] × [HEIGHT]",
    "clipblocks.setVisibility": "設置所有角色的可見性為 [BOOLEANMENU]",
    "clipblocks.showDialog": "顯示窗口 標題: [TITLE] 內容: [CONTENT] 居左佈局: [BOOLEANMENU] 按鈕文本: [BUTTONTEXT]",
    "clipblocks.stopSoundFromInternet": "停止從URL播放的音樂",
    "clipblocks.valueOfVariable": "變量 [NAME] 的值",
    "pen.booleanMenu.false": "假",
    "pen.booleanMenu.true": "真",
    "pen.drawRect": "使用顏色 [COLOR] 在 x:[X] y:[Y] 處畫一個寬為 [WIDTH] 高為 [HEIGHT] 的矩形",
    "pen.printText": "在 x: [X] y:[Y] 處打印文字 [TEXT]",
    "pen.setPrintFont": "設置打印字體為 [FONT]",
    "pen.setPrintFontBold": "設置打印粗體狀態為 [BOOLEANMENU]",
    "pen.setPrintFontColor": "設置打印顏色為 [COLOR]",
    "pen.setPrintFontItalic": "設置打印斜體狀態為 [BOOLEANMENU]",
    "pen.setPrintFontSize": "設置打印字體大小為 [SIZE]",
    "pen.setPrintFontUnderline": "設置打印下劃線狀態為 [BOOLEANMENU]",
    "gui.extension.clipcc.json.name": "JSON",
    "gui.extension.clipcc.json.description": "用途多多的JSON擴展。",
    "ccjson.getLengthOfArray": "獲取數組 [ARRAY] 的長度",
    "ccjson.setValueByPos": "設置數組 [ARRAY] 中第 [POS] 項為 [VALUE]",
    "pen.GoPenLayer": "將畫筆層設置為 [OPTION]",
    "pen.layerMenu.back": "底層",
    "pen.layerMenu.front": "頂層"
  },
  "zh-cn-chunibyo": {
    "gui.extension.music.name": "AAAAAA-OOOO—EEEE",
    "gui.extension.music.description": "Brain Power!",
    "gui.extension.pen.name": "乱七八糟的蜡笔",
    "gui.extension.pen.description": "欣赏公主的灵魂画作",
    "gui.extension.HTTPIO.name": "HTTP👆👇",
    "gui.extension.HTTPIO.description": "感受异次元的魅力!",
    "gui.extension.ccjson.name": "JASON",
    "gui.extension.ccjson.description": "有用的JASON",
    "gui.extension.redlist.name": "红冥单",
    "gui.extension.redlist.description": "腹黑CC公主的暗杀名单",
    "gui.extension.videosensing.name": "让我康康",
    "gui.extension.videosensing.description": "使用摄像头侦测挪动",
    "gui.extension.text2speech.name": "文字朗读",
    "gui.extension.text2speech.description": "让你的作品大声哭闹。",
    "gui.extension.translate.name": "翻译官",
    "gui.extension.translate.description": "刊油斯劈克英格力续？",
    "gui.extension.makeymakey.description": "把任何东西变成按键",
    "gui.extension.microbit.description": "打破次元壁。",
    "gui.extension.microbit.connectingMessage": "少女折寿中",
    "gui.extension.ev3.description": "搭建交互机器人等。",
    "gui.extension.ev3.connectingMessage": "正在连接。请确保EV3上的识别码(PIN)已经设置为1234。",
    "gui.extension.boost.description": "生动有趣的机器人创作",
    "gui.extension.boost.connectingMessage": "少女折寿中",
    "gui.extension.wedo2.description": "支持马达和传感器。",
    "gui.extension.wedo2.connectingMessage": "少女折寿中",
    "gui.extension.gdxfor.description": "感受推👈拉👉动💁转🙆。",
    "gui.extension.gdxfor.connectingMessage": "正在连接",
    "boost.color.any": "任何颜色",
    "boost.color.black": "黑色",
    "boost.color.blue": "蓝色",
    "boost.color.green": "绿色",
    "boost.color.red": "黄色",
    "boost.color.white": "白色",
    "boost.color.yellow": "黄色",
    "boost.getMotorPosition": "马达 [MOTOR_REPORTER_ID] 位置",
    "boost.getTiltAngle": "向[TILT_DIRECTION]倾角",
    "boost.motorDirection.backward": "逆时针",
    "boost.motorDirection.forward": "顺时针",
    "boost.motorDirection.reverse": "反转",
    "boost.motorOff": "关闭马达 [MOTOR_ID]",
    "boost.motorOn": "开启马达 [MOTOR_ID]",
    "boost.motorOnFor": "使马达 [MOTOR_ID]转动 [DURATION] 秒",
    "boost.motorOnForRotation": "使马达 [MOTOR_ID]转动 [ROTATION] 圈",
    "boost.seeingColor": "看到 [COLOR]积木 ?",
    "boost.setLightHue": "将灯光颜色设为[HUE]",
    "boost.setMotorDirection": "将马达[MOTOR_ID] 方向设为 [MOTOR_DIRECTION]",
    "boost.setMotorPower": "将马达 [MOTOR_ID] 速度设为 [POWER]%",
    "boost.tiltDirection.any": "任意方向",
    "boost.tiltDirection.down": "下",
    "boost.tiltDirection.left": "左",
    "boost.tiltDirection.right": "右",
    "boost.tiltDirection.up": "上",
    "boost.whenColor": "当看到[COLOR]积木",
    "boost.whenTilted": "当向[TILT_DIRECTION_ANY]倾斜",
    "ccjson.getValueByKey": "get [KEY] in [JSON]",
    "ccjson.setValueByKey": "set [KEY] to [VALUE] in [JSON]",
    "ev3.beepNote": "鸣笛[NOTE][TIME]秒",
    "ev3.buttonPressed": "按下按钮[PORT]?",
    "ev3.getBrightness": "亮度",
    "ev3.getDistance": "距离",
    "ev3.getMotorPosition": "马达[PORT]的位置",
    "ev3.motorSetPower": "马达[PORT]功率设为[POWER]%",
    "ev3.motorTurnClockwise": "马达[PORT]正转[TIME]秒",
    "ev3.motorTurnCounterClockwise": "马达[PORT]反转[TIME]秒",
    "ev3.whenBrightnessLessThan": "当亮度 < [DISTANCE]",
    "ev3.whenButtonPressed": "当按下按钮[PORT]",
    "ev3.whenDistanceLessThan": "当距离 < [DISTANCE]",
    "gdxfor.getAcceleration": "向[DIRECTION]的芜湖程度",
    "gdxfor.getForce": "受力",
    "gdxfor.getSpin": "向[DIRECTION]的旋转速度",
    "gdxfor.getTilt": "向[TILT]倾角",
    "gdxfor.isFreeFalling": "自由落体？",
    "gdxfor.isTilted": "向[TILT]倾斜？",
    "gdxfor.pulled": "拉扯",
    "gdxfor.pushed": "挤压",
    "gdxfor.shaken": "被晃动",
    "gdxfor.startedFalling": "开始自由落体",
    "gdxfor.tiltDirectionMenu.any": "任意方向",
    "gdxfor.tiltDirectionMenu.back": "后",
    "gdxfor.tiltDirectionMenu.front": "前",
    "gdxfor.tiltDirectionMenu.left": "左",
    "gdxfor.tiltDirectionMenu.right": "右",
    "gdxfor.turnedFaceDown": "正面向下",
    "gdxfor.turnedFaceUp": "正面向上",
    "gdxfor.whenForcePushedOrPulled": "当力传感器被[PUSH_PULL]",
    "gdxfor.whenGesture": "当传感器[GESTURE]",
    "gdxfor.whenTilted": "当向[TILT]倾斜",
    "httpio.categoryName": "HttpIO",
    "httpio.httpGet": "get [URL]",
    "httpio.httpPost": "post [URL] with prefix variable [PREFIX]",
    "httpio.setHeader": "set header to [HEADER]",
    "httpio.setUA": "set UA to [UA]",
    "libra.categoryName": "Libra",
    "libra.inListReason": "reason of [NAME] being in redlist",
    "libra.isInList": "is [NAME] in the redlist?",
    "libra.isRedlistAvailable": "is redlist available?",
    "makeymakey.downArrow": "↓",
    "makeymakey.downArrowShort": "下",
    "makeymakey.leftArrow": "←",
    "makeymakey.leftArrowShort": "左",
    "makeymakey.rightArrow": "→",
    "makeymakey.rightArrowShort": "右",
    "makeymakey.spaceKey": "空格",
    "makeymakey.upArrow": "↑",
    "makeymakey.upArrowShort": "上",
    "makeymakey.whenKeyPressed": "当按下 [KEY] 键",
    "makeymakey.whenKeysPressedInOrder": "当依次按下[SEQUENCE]键时",
    "microbit.buttonsMenu.any": "任意",
    "microbit.clearDisplay": "清空屏幕",
    "microbit.defaultTextToDisplay": "Hello!",
    "microbit.displaySymbol": "显示[MATRIX]",
    "microbit.displayText": "显示文本[TEXT]",
    "microbit.gesturesMenu.jumped": "抛起",
    "microbit.gesturesMenu.moved": "移动",
    "microbit.gesturesMenu.shaken": "摇晃",
    "microbit.isButtonPressed": "按下[BTN]按钮？",
    "microbit.isTilted": "向[DIRECTION]倾斜？",
    "microbit.pinStateMenu.off": "低电平",
    "microbit.pinStateMenu.on": "高电平",
    "microbit.tiltAngle": "向[DIRECTION]倾角",
    "microbit.tiltDirectionMenu.any": "任意",
    "microbit.tiltDirectionMenu.back": "后",
    "microbit.tiltDirectionMenu.front": "前",
    "microbit.tiltDirectionMenu.left": "左",
    "microbit.tiltDirectionMenu.right": "右",
    "microbit.whenButtonPressed": "当按下[BTN]按钮",
    "microbit.whenGesture": "当被[GESTURE]",
    "microbit.whenPinConnected": "当引脚[PIN]接地",
    "microbit.whenTilted": "当向[DIRECTION]倾斜",
    "music.categoryName": "音乐",
    "music.changeTempo": "将演奏速度增加[TEMPO]",
    "music.drumBass": "(2) 低音鼓",
    "music.drumBongo": "(13) 邦戈鼓",
    "music.drumCabasa": "(15) 卡巴萨",
    "music.drumClaves": "(9) 音棒",
    "music.drumClosedHiHat": "(6) 闭击踩镲",
    "music.drumConga": "(14) 康加鼓",
    "music.drumCowbell": "(11) 牛铃",
    "music.drumCrashCymbal": "(4) 碎音钹",
    "music.drumCuica": "(18) 锯加鼓",
    "music.drumGuiro": "(16) 刮瓜",
    "music.drumHandClap": "(8) 手掌",
    "music.drumOpenHiHat": "(5) 开击踩镲",
    "music.drumSideStick": "(3) 敲鼓边",
    "music.drumSnare": "(1) 小军鼓",
    "music.drumTambourine": "(7) 铃鼓",
    "music.drumTriangle": "(12) 三角铁",
    "music.drumVibraslap": "(17) 颤音器",
    "music.drumWoodBlock": "(10) 木鱼",
    "music.getTempo": "演奏速度",
    "music.instrumentBass": "(6) 贝斯",
    "music.instrumentBassoon": "(14) 巴松管",
    "music.instrumentCello": "(8) 大提琴",
    "music.instrumentChoir": "(15) 唱诗班",
    "music.instrumentClarinet": "(10) 单簧管",
    "music.instrumentElectricGuitar": "(5) 电吉他",
    "music.instrumentElectricPiano": "(2) 电钢琴",
    "music.instrumentFlute": "(12) 长笛",
    "music.instrumentGuitar": "(4) 吉他",
    "music.instrumentMarimba": "(19) 马林巴琴",
    "music.instrumentMusicBox": "(17) 八音盒",
    "music.instrumentOrgan": "(3) 风琴",
    "music.instrumentPiano": "(1) 钢琴",
    "music.instrumentPizzicato": "(7) 拨弦",
    "music.instrumentSaxophone": "(11) 萨克斯管",
    "music.instrumentSteelDrum": "(18) 钢鼓",
    "music.instrumentSynthLead": "(20) 合成主音",
    "music.instrumentSynthPad": "(21) 合成柔音",
    "music.instrumentTrombone": "(9) 长号",
    "music.instrumentVibraphone": "(16) 颤音琴",
    "music.instrumentWoodenFlute": "(13) 木长笛",
    "music.midiPlayDrumForBeats": "击打 [DRUM] [BEATS] 拍",
    "music.midiSetInstrument": "将乐器设为 [INSTRUMENT]",
    "music.playDrumForBeats": "拍打 [DRUM] [BEATS] 拍",
    "music.playNoteForBeats": "演奏音符[NOTE][BEATS]拍",
    "music.restForBeats": "休止[BEATS]拍",
    "music.setInstrument": "将乐器设为 [INSTRUMENT]",
    "music.setTempo": "将演奏速度设定为[TEMPO]",
    "pen.categoryName": "画笔",
    "pen.changeColorParam": "将笔的 [COLOR_PARAM] 增加[VALUE]",
    "pen.changeHue": "将笔的颜色增加[HUE]",
    "pen.changeShade": "将笔的亮度增加[SHADE]",
    "pen.changeSize": "将笔的粗细增加[SIZE]",
    "pen.clear": "全部木大",
    "pen.colorMenu.brightness": "靓度",
    "pen.colorMenu.color": "颜色",
    "pen.colorMenu.saturation": "饱和度",
    "pen.colorMenu.transparency": "透明度",
    "pen.penDown": "落笔",
    "pen.penUp": "收笔",
    "pen.setColor": "将笔的颜色设为[COLOR]",
    "pen.setColorParam": "将笔的 [COLOR_PARAM] 设为[VALUE]",
    "pen.setHue": "将笔的颜色设为[HUE]",
    "pen.setShade": "将笔的亮度设为[SHADE]",
    "pen.setSize": "将笔的粗细设为[SIZE]",
    "pen.stamp": "图章",
    "speech.defaultWhenIHearValue": "开始",
    "speech.extensionName": "语音识别",
    "speech.listenAndWait": "听候语音输入",
    "speech.speechReporter": "语音输入",
    "speech.whenIHear": "当听到[PHRASE]",
    "text2speech.alto": "中音",
    "text2speech.categoryName": "文字朗读",
    "text2speech.defaultTextToSpeak": "您好",
    "text2speech.giant": "巨人",
    "text2speech.kitten": "小猫",
    "text2speech.setLanguageBlock": "将朗读语言设置为[LANGUAGE]",
    "text2speech.setVoiceBlock": "使用 [VOICE] 嗓音",
    "text2speech.speakAndWaitBlock": "朗读 [WORDS]",
    "text2speech.squeak": "尖细",
    "text2speech.tenor": "男高音",
    "translate.categoryName": "翻译",
    "translate.defaultTextToTranslate": "你好",
    "translate.translateBlock": "将 [WORDS] 译为 [LANGUAGE]",
    "translate.viewerLanguage": "访客语言",
    "videoSensing.categoryName": "视频侦测",
    "videoSensing.direction": "方向",
    "videoSensing.motion": "挪动",
    "videoSensing.off": "关闭",
    "videoSensing.on": "开启",
    "videoSensing.onFlipped": "镜像开启",
    "videoSensing.setVideoTransparency": "将视频透明度设为[TRANSPARENCY]",
    "videoSensing.sprite": "角色",
    "videoSensing.stage": "舞台",
    "videoSensing.videoOn": "相对于[SUBJECT]的视频[ATTRIBUTE]",
    "videoSensing.videoToggle": "[VIDEO_STATE]摄像头",
    "videoSensing.whenMotionGreaterThan": "当视频挪动 > [REFERENCE]",
    "wedo2.getDistance": "距离",
    "wedo2.getTiltAngle": "向[TILT_DIRECTION]倾角",
    "wedo2.isTilted": "向[TILT_DIRECTION_ANY]倾斜？",
    "wedo2.motorDirection.backward": "逆时针",
    "wedo2.motorDirection.forward": "顺时针",
    "wedo2.motorDirection.reverse": "反转",
    "wedo2.motorId.a": "马达A",
    "wedo2.motorId.all": "所有马达",
    "wedo2.motorId.b": "马达B",
    "wedo2.motorId.default": "马达",
    "wedo2.motorOff": "关闭[MOTOR_ID]",
    "wedo2.motorOn": "开启[MOTOR_ID]",
    "wedo2.motorOnFor": "开启[MOTOR_ID][DURATION]秒",
    "wedo2.playNoteFor": "演奏音符[NOTE][DURATION]秒",
    "wedo2.setLightHue": "将灯光颜色设为[HUE]",
    "wedo2.setMotorDirection": "将[MOTOR_ID]转向设为[MOTOR_DIRECTION]",
    "wedo2.startMotorPower": "将[MOTOR_ID]功率设为[POWER]",
    "wedo2.tiltDirection.any": "任意方向",
    "wedo2.tiltDirection.down": "下",
    "wedo2.tiltDirection.left": "左",
    "wedo2.tiltDirection.right": "右",
    "wedo2.tiltDirection.up": "上",
    "wedo2.whenDistance": "当距离[OP][REFERENCE]",
    "wedo2.whenTilted": "当向[TILT_DIRECTION_ANY]倾斜",
    "ccjson.getValueByArray": "从数组 [ARRAY] 的 [POS] 位置中获取值",
    "clipblocks.booleanMenu.false": "假",
    "clipblocks.booleanMenu.true": "真",
    "clipblocks.clearFlashGraphicEffect": "清除所有原生特效",
    "clipblocks.colorInPosition": "舞台 x: [X] y: [Y] 的颜色",
    "clipblocks.createvar": "创建一个变量 [NAME]",
    "clipblocks.deletevar": "删除一个变量 [NAME]",
    "clipblocks.getClipboard": "剪贴板内容",
    "clipblocks.gotoWebsite": "传送到异世界 [URL]",
    "clipblocks.graphicMenu.bevel": "斜角",
    "clipblocks.graphicMenu.blur": "模糊",
    "clipblocks.graphicMenu.glow": "外发光",
    "clipblocks.graphicMenu.shadow": "阴影",
    "clipblocks.isVariableExist": "变量 [NAME] 存在吗？",
    "clipblocks.playSoundFromInternet": "从URL播放音乐 [URL]",
    "clipblocks.setClipboard": "将剪贴板设为 [TEXT]",
    "clipblocks.setFlashGraphicEffect": "设置原生特效 [FLASHEFFECT] 为 [VALUE1] [VALUE2] [VALUE3]",
    "clipblocks.setRate": "设置舞台帧率为 [RATE]",
    "clipblocks.setStageSize": "设置舞台大小为 [WIDTH] × [HEIGHT]",
    "clipblocks.setVisibility": "设置所有角色的可见性为 [BOOLEANMENU]",
    "clipblocks.showDialog": "显示窗口 标题: [TITLE] 内容: [CONTENT] 居左布局: [BOOLEANMENU] 按钮文本: [BUTTONTEXT]",
    "clipblocks.stopSoundFromInternet": "停止从URL播放的音乐",
    "clipblocks.valueOfVariable": "变量 [NAME] 的值",
    "pen.booleanMenu.false": "假",
    "pen.booleanMenu.true": "真",
    "pen.drawRect": "使用颜色 [COLOR] 在 x:[X] y:[Y] 处画一个宽为 [WIDTH] 高为 [HEIGHT] 的正方形",
    "pen.printText": "在 x: [X] y:[Y] 处写字 [TEXT]",
    "pen.setPrintFont": "设置字体为 [FONT]",
    "pen.setPrintFontBold": "设置打印粗体状态为 [BOOLEANMENU]",
    "pen.setPrintFontColor": "设置打印颜色为 [COLOR]",
    "pen.setPrintFontItalic": "设置打印斜体状态为 [BOOLEANMENU]",
    "pen.setPrintFontSize": "设置打印字体大小为 [SIZE]",
    "pen.setPrintFontUnderline": "设置打印下划线状态为 [BOOLEANMENU]",
    "gui.extension.clipcc.json.name": "JASON",
    "gui.extension.clipcc.json.description": "多才多艺的JASON神器。",
    "ccjson.getLengthOfArray": "量量数组 [ARRAY] 的体长",
    "ccjson.setValueByPos": "把数组 [ARRAY] 中第 [POS] 个元素换成 [VALUE]",
    "pen.GoPenLayer": "我在 [OPTION] 层",
    "pen.layerMenu.back": "地下十八层",
    "pen.layerMenu.front": "大气"
  }
};
